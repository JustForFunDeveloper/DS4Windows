<mah:MetroWindow
    x:Class="DS4WinWPF.DraculaView.Views.DraculaMainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:common="clr-namespace:DS4WinWPF.DraculaView.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:DS4WinWPF.DraculaView.ViewModels"
    xmlns:views="clr-namespace:DS4WinWPF.DraculaView.Views"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    x:Name="mainWindow"
    Title="DS4Windows"
    TitleAlignment="Left"
    Width="1000"
    Height="600"
    MinWidth="1000"
    MinHeight="600"
    Background="Black"
    BorderBrush="{DynamicResource MahApps.Brushes.Control.Background}"
    BorderThickness="0"
    ResizeMode="CanResizeWithGrip"
    Style="{DynamicResource MyCleanWindowStyle}"
    WindowStartupLocation="CenterScreen"
    WindowTransitionsEnabled="False"
    mc:Ignorable="d">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Clean/MetroWindow.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style
                x:Key="MyCleanWindowStyle"
                BasedOn="{StaticResource MahApps.Styles.MetroWindow.Clean}"
                TargetType="{x:Type mah:MetroWindow}" />
        </ResourceDictionary>
    </Window.Resources>

    <mah:MetroWindow.LeftWindowCommands>
        <mah:WindowCommands>
            <Button Command="{Binding OpenMenu}" Content="Menu" />
        </mah:WindowCommands>
    </mah:MetroWindow.LeftWindowCommands>

    <Window.DataContext>
        <viewModels:MainViewModel />
    </Window.DataContext>

    <Grid x:Name="RootGrid">
        <Grid.Resources>

            <common:SelectedItemToContentConverter x:Key="SelectedItemToContentConverter" />

            <!--  this is the template for the items (options)  -->
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type mah:HamburgerMenuIconItem}">
                <Grid
                    x:Name="RootGrid"
                    Height="48"
                    Background="Transparent">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{Binding Icon}"
                        Focusable="False" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="{Binding Label}" />
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mah:HamburgerMenu}}, Path=IsPaneOpen}" Value="False">
                        <Setter TargetName="RootGrid" Property="ToolTip" Value="{Binding ToolTip, Mode=OneWay}" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <!--  these are the templates for the view models  -->
            <DataTemplate DataType="{x:Type viewModels:HomeViewModel}">
                <views:HomeView DataContext="{Binding}" />
            </DataTemplate>
        </Grid.Resources>

        <mah:HamburgerMenu
            x:Name="HamburgerMenuControl"
            Grid.Row="0"
            BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
            DisplayMode="Overlay"
            HamburgerVisibility="Hidden"
            IsPaneOpen="{Binding IsPaneOpened}"
            ItemTemplate="{StaticResource MenuItemTemplate}"
            ItemsSource="{Binding MenuItems}"
            OptionsItemTemplate="{StaticResource MenuItemTemplate}"
            OptionsItemsSource="{Binding MenuOptionItems}"
            PaneBackground="#0f0f0f"
            PaneHeaderMargin="0,-60,0,8"
            PaneMargin="0,0,0,0"
            SelectedIndex="{Binding SelectedIndex}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="ItemClick">
                    <i:InvokeCommandAction Command="{Binding ItemClick}" CommandParameter="{Binding ElementName=HamburgerMenuControl, Path=SelectedIndex}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="OptionsItemClick">
                    <i:InvokeCommandAction Command="{Binding OptionItemClick}" CommandParameter="{Binding ElementName=HamburgerMenuControl, Path=SelectedOptionsIndex}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <mah:HamburgerMenu.Content>
                <MultiBinding Converter="{StaticResource SelectedItemToContentConverter}">
                    <Binding
                        FallbackValue="{x:Null}"
                        Mode="OneWay"
                        Path="SelectedItem.Tag"
                        RelativeSource="{RelativeSource Self}" />
                    <Binding
                        FallbackValue="{x:Null}"
                        Mode="OneWay"
                        Path="SelectedOptionsItem.Tag"
                        RelativeSource="{RelativeSource Self}" />
                </MultiBinding>
            </mah:HamburgerMenu.Content>

        </mah:HamburgerMenu>

        <tb:TaskbarIcon x:Name="notifyIcon" IconSource="/Resources/DS4W.ico" ToolTipText="DS4Windows" MenuActivation="RightClick" TrayRightMouseUp="NotifyIcon_TrayRightMouseUp" TrayMiddleMouseDown="NotifyIcon_TrayMiddleMouseDown" TrayMouseDoubleClick="NotifyIcon_TrayMouseDoubleClick">
        </tb:TaskbarIcon>
    </Grid>
</mah:MetroWindow>
